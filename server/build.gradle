apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'war'

configurations {
  wildfly
}

dependencies {
  implementation project(':interfaces')
  implementation 'jakarta.platform:jakarta.jakartaee-api:10.0.0'

  wildfly "org.wildfly:wildfly-dist:${versions.wildfly}@zip"
}

File wildFlyDir = new File(buildDir, 'wildfly')

task downloadServer(type: Copy) {
  from configurations.wildfly
  into temporaryDir
}

task installServer(type: Copy) {
  dependsOn downloadServer
  from zipTree(new File(downloadServer.temporaryDir, "wildfly-dist-${versions.wildfly}.zip"))
  into wildFlyDir
}

task configureServer(type: Exec) {
  dependsOn installServer
  workingDir new File(wildFlyDir, "wildfly-${versions.wildfly}/bin")
  commandLine 'cmd', '/c', "add-user.bat -a -u username -p password"
}

task startServer {
  dependsOn configureServer
  doLast {
    ProcessBuilder processBuilder = new ProcessBuilder('cmd', '/c', 'standalone.bat')
    processBuilder.directory(new File(wildFlyDir, "wildfly-${versions.wildfly}/bin"))
    processBuilder.environment().put('JAVA_HOME', org.gradle.internal.jvm.Jvm.current().javaHome.absolutePath)
    File logFile = new File(buildDir, 'logs/std.log')
    logFile.parentFile.mkdirs()
    processBuilder.redirectErrorStream(true).redirectOutput(logFile)
    processBuilder.start()
  }
}

task deployServer(type: Exec) {
  dependsOn war
  workingDir new File(wildFlyDir, "wildfly-${versions.wildfly}/bin")
  commandLine 'cmd', '/c', "jboss-cli.bat -c \"deploy --force ${war.archiveFile.get()}\""
}

task stopServer(type: Exec) {
  dependsOn war
  workingDir new File(wildFlyDir, "wildfly-${versions.wildfly}/bin")
  commandLine 'cmd', '/c', "jboss-cli.bat -c shutdown"
}
